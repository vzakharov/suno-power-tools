(()=>{function d(t){return typeof t=="function"}function f(t,e){return d(t)?e?new s(t,e):new r(t):new o(t)}var u=class{constructor(e){this._value=e}watchers=[];activeWatchers=new WeakSet;get(){return a?.(this),this._value}_set(e){let{_value:n}=this;if(e!==this._value){this._value=e;try{for(let i of this.watchers){if(this.activeWatchers.has(i)){console.warn("smork: watcher is already active \u2014 perhaps a circular dependency \u2014 exiting watch to prevent infinite loop");return}this.activeWatchers.add(i),i(e,n)}}finally{this.activeWatchers=new WeakSet}}}runAndWatch(e){e(this._value,this._value),this.watch(e)}watchImmediate=this.runAndWatch;watch(e){this.watchers.push(e)}onChange=this.watch;unwatch(e){this.watchers=this.watchers.filter(n=>n!==e)}get value(){return this.get()}map(e){return new r(()=>e(this.value))}compute=this.map},o=class extends u{set(e){this._set(e)}set value(e){this.set(e)}get value(){return this.get()}bridge(e,n){return new s(()=>e(this.value),i=>this.set(n(i)))}};var a,r=class extends o{constructor(e){if(a)throw new Error("smork: currentComputedPreHandler is already set (this should never happen)");try{a=n=>{n.watch(()=>this._set(e()))},super(e())}finally{a=void 0}}};function c(t){return new r(t)}var s=class extends o{constructor(n,i){let T=new r(n);super(T.value);this.setter=i;T.watch(h=>this._set(h))}set(n){if(this.setter(n),this.value!==n)throw new Error("smork: bridge value did not change to the one being set")}};function l(t){return c(()=>!t.value)}function p(t,e){Object.assign(t,e)}p(window,{ref:f,computed:c,useNot:l,BaseRef:u,Ref:o,ComputedRef:r,BridgedRef:s});})();
