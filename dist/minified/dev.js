(()=>{function f(t){return typeof t=="function"}function l(t,e){return f(t)?e?new s(t,e):new o(t):new i(t)}var u=class{constructor(e){this._value=e}watchers=[];activeWatchers=new WeakSet;get(){return a?.(this),this._value}_set(e){let{_value:n}=this;if(e!==this._value){this._value=e;try{for(let r of this.watchers){if(this.activeWatchers.has(r)){console.warn("smork: watcher is already active \u2014 perhaps a circular dependency \u2014 exiting watch to prevent infinite loop");return}this.activeWatchers.add(r),r(e,n)}}finally{this.activeWatchers=new WeakSet}}}runAndWatch(e){e(this._value,this._value),this.watch(e)}watchImmediate=this.runAndWatch;watch(e){this.watchers.push(e)}onChange=this.watch;unwatch(e){this.watchers=this.watchers.filter(n=>n!==e)}get value(){return this.get()}map(e){return new o(()=>e(this.value))}compute=this.map;merge(e){return e?T(()=>({...this.value,...w(e)})):this}},i=class extends u{set(e){this._set(e)}set value(e){this.set(e)}get value(){return this.get()}bridge(e,n){return new s(()=>e(this.value),r=>this.set(n(r)))}};var a,c=class extends Error{constructor(e){super(`smork: ${e}`)}},o=class extends i{constructor(e){if(a)throw new c("currentComputedPreHandler is already set (this should never happen)");try{a=n=>{n.watch(()=>this._set(e()))},super(e())}finally{a=void 0}}};function T(t){return new o(t)}var s=class extends i{constructor(n,r){let d=new o(n);super(d.value);this.setter=r;d.watch(x=>this._set(x))}set(n){if(this.setter(n),this.value!==n)throw new c("bridge value did not change to the one being set")}};function p(t){return T(()=>!t.value)}function m(t){return(e,n,r)=>t instanceof u?e(t):f(t)?n(t):r(t)}function w(t){return m(t)(e=>e.value,e=>e(),e=>e)}function h(t,e){Object.assign(t,e)}h(window,{ref:l,computed:T,useNot:p,BaseRef:u,Ref:i,ComputedRef:o,BridgedRef:s});})();
