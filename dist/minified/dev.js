(()=>{function f(t){return typeof t=="function"}var T=class extends Error{constructor(e){super(`smork: ${e}`)}};function l(t,e){return f(t)?s(t,e):new o(t)}var u=class{constructor(e){this._value=e}watchers=new Set;activeWatchers=new WeakSet;get(){return c?.(this),this._value}_set(e){let{_value:n}=this;if(e!==this._value){this._value=e;try{for(let r of this.watchers){if(this.activeWatchers.has(r)){console.warn("smork: watcher is already active \u2014 perhaps a circular dependency \u2014 exiting watch to prevent infinite loop");return}this.activeWatchers.add(r),r(e,n)}}finally{this.activeWatchers=new WeakSet}}}runAndWatch(e){e(this._value,this._value),this.watch(e)}watchImmediate=this.runAndWatch;watch(e){this.watchers.add(e)}onChange=this.watch;unwatch(e){this.watchers.delete(e)}get value(){return this.get()}map(e){return new i(()=>e(this.value))}compute=this.map;merge(e){return e?s(()=>({...this.value,...w(e)})):this}},o=class extends u{set(e){this._set(e)}set value(e){this.set(e)}get value(){return this.get()}bridge(e,n){return new a(()=>e(this.value),r=>this.set(n(r)))}};var c,i=class extends o{constructor(n){super(void 0);this.getter=n;this.track()}dependencies=new Set;track=()=>{if(c)throw new T("Tried to compute a ref while another one is already being computed \u2014 did you nest a computed ref in another ref's getter function?");this.dependencies.forEach(n=>n.unwatch(this.track)),this.dependencies=new Set;try{c=n=>{n.watch(this.track),this.dependencies.add(n)},this._set(this.getter())}finally{c=void 0}}},a=class extends o{constructor(n,r,v=!1){let d=new i(n);super(d.value);this.setter=r;this.allowMismatch=v;d.watch(x=>this._set(x))}set(n){if(this.setter(n),!this.allowMismatch&&this.value!==n)throw new T("Setter did not update the value. If you want to allow this, set the allowMismatch property to true.")}};function s(t,e){return e?new a(t,e):new i(t)}function p(t){return s(()=>!t.value)}function m(t){return(e,n,r)=>t instanceof u?e(t):f(t)?n(t):r(t)}function w(t){return m(t)(e=>e.value,e=>e(),e=>e)}function h(t,e){Object.assign(t,e)}h(window,{ref:l,computed:s,useNot:p,BaseRef:u,Ref:o,ComputedRef:i,WritableComputedRef:a});})();
