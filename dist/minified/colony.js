window.templates = {"colony":"<head>\n  <style>\n    body { \n      margin: 0;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n    }\n\n    #sidebar {\n      position: fixed;\n      padding: 10px;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      width: 200px;\n      background-color: #333;\n      color: #eee;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    }\n\n    .f-row {\n      display: flex;\n      flex-direction: row;\n    }\n\n    .f-col {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .smol {\n      font-size: 0.8em;\n      color: #aaa;\n    }\n\n    .relative {\n      position: relative;\n    }\n\n    .absolute {\n      position: absolute;\n    }\n\n    .topleft {\n      top: 0;\n      left: 0;\n    }\n\n    .p-1 {\n      padding: 1rem;\n    };\n\n    .p-2 {\n      padding: 2rem;\n    }\n\n    .w-100 {\n      width: 100%;\n    }\n    \n    .h-100 {\n      height: 100%;\n    }\n\n    .j-between {\n      justify-content: space-between;\n    }\n\n    .settings {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .settings > div {\n      margin-top: 5px;\n    }\n\n  </style>\n  <script src=\"//unpkg.com/___graph_url_slug___\"></script>\n</head>\n\n<body>\n  <div id=\"graph\">\n  </div>\n  <div id=\"sidebar\">\n    <div class=\"settings\">\n      <h3>Settings</h3>\n      <!-- Use next links -->\n      <div>\n        <input type=\"checkbox\" id=\"useNextLinks\" data-type=\"linkToggle\" data-kind=\"next\" checked>\n        <label for=\"useNextLinks\">Attract based on time</label>\n      </div>\n      <!-- Show next links -->\n      <div id=\"showNextLinksContainer\">\n        <input type=\"checkbox\" id=\"showNextLinks\" data-type=\"linkToggle\" data-kind=\"descendant\">\n        <label for=\"showNextLinks\">Show time-based links</label>\n      </div>\n      <!-- Use descendant links -->\n      <div>\n        <input type=\"checkbox\" id=\"useDescendantLinks\" data-type=\"linkToggle\" data-kind=\"descendant\" checked>\n        <label for=\"useDescendantLinks\">Attract to root clip</label>\n      </div>\n      <!-- Filter -->\n      <div>\n        <input type=\"text\" id=\"filter\" placeholder=\"Filter by name, style or ID\">\n        <p class=\"smol\">\n          Enter to apply. (Filter will include both matching nodes and any nodes belonging to the same root clip.)\n        </p>\n      </div>\n    </div>\n    <div id=\"audioContainer\" class=\"w-100\" style=\"display: none;\">\n      <div class=\"relative\">\n        <a id=\"audioLink\" target=\"_blank\">\n          <img id=\"audioImage\" style=\"opacity: 0.5\" class=\"w-100\">\n        </a>\n        <div class=\"absolute topleft\" style=\"width: 190px; padding: 5px;\">\n          <div id=\"audioName\"></div>\n          <div class=\"smol\" id=\"audioTags\"></div>\n        </div>\n      </div>\n      <audio controls id=\"audio\" class=\"w-100\"></audio>\n    </div>\n  </div>    \n  <div id=\"data\" style=\"display: none;\">\n    ___data___\n  </div>\n  <script>\n\n    const use3DGraph = ___use3DGraph___;\n    const data = JSON.parse(document.getElementById('data').innerText);\n    let graph = renderGraph(data);\n    Object.assign(window, { data, graph });\n\n    function visibilityChecker(link) {\n      return !{\n        descendant: true,\n        next: !document.getElementById('showNextLinks').checked\n      }[link.kind];\n    };\n\n    function renderGraph(data) {\n      const graph = new ___GraphRenderer___()\n        (document.getElementById('graph'))\n        .graphData(data)\n        .backgroundColor('#001')\n        .linkAutoColorBy('kind')\n        .nodeAutoColorBy('rootId')\n        .linkLabel('kind')\n        .linkVisibility(visibilityChecker)\n        .linkDirectionalParticles(1)\n        .nodeLabel(({ id, name, tags, image_url }) => `\n          <div class=\"relative\" style=\"width: 200px;\">\n            <img src=\"${image_url}\" style=\"opacity: 0.5; width: 200px\">\n            <div class=\"absolute topleft\" style=\"width: 190px; padding: 5px;\">\n              <div>${name || '[Untitled]'}</div>\n              <div class=\"smol\">${tags || '(no style)'}</div>\n            </div>\n          </div>\n          <div class=\"smol\">\n            Click to play, right-click to open in Suno\n          </div>\n        `)\n        .onNodeClick(({ id, name, tags, image_url, audio_url }) => {\n          document.getElementById('audioContainer').style.display = 'block';\n          document.getElementById('audioLink').href = `https://suno.com/song/${id}`;\n          document.getElementById('audioImage').src = image_url;\n          document.getElementById('audioName').innerText = name || '[Untitled]';\n          document.getElementById('audioTags').innerText = tags || '(no style)';\n          const audio = document.getElementById('audio');\n          audio.src = audio_url;\n          audio.play();\n        })\n        .onNodeRightClick(({ id }) => {\n          window.open(`https://suno.com/song/${id}`);\n        });\n      if ( use3DGraph ) {\n        graph.linkOpacity(l => l.isMain ? 1 : 0.2)\n      } else {\n        graph.linkLineDash(l => l.isMain ? undefined : [1, 2])\n      }\n      return graph;\n    };\n\n    document.querySelectorAll('[data-type=\"linkToggle\"]').forEach(checkbox => {\n      checkbox.addEventListener('change', () => {\n        const kind = checkbox.getAttribute('data-kind');\n        applyLinkFilter(checkbox);\n        if ( kind === 'next' ) {\n          document.getElementById('showNextLinksContainer').style.display = useLinks ? 'block' : 'none';\n        };\n      });\n    });\n\n    function applyLinkFilter(checkbox) {\n      const kind = checkbox.getAttribute('data-kind');\n      const useLinks = checkbox.checked;\n      let { nodes, links } = graph.graphData();\n      if ( !useLinks ) {\n        links = links.filter(l => l.kind !== kind);\n      } else {\n        links.push(...data.links.filter(l => l.kind === kind));\n      }\n      graph.graphData({ nodes, links });\n    };\n\n    document.getElementById('showNextLinks').addEventListener('change', () => {\n      graph.linkVisibility(visibilityChecker);\n    });\n    \n    // Filter (on Enter key)\n    document.getElementById('filter').addEventListener('keyup', e => {\n      if (e.keyCode === 13) {\n        const filter = e.target.value.toLowerCase();\n        const matchingNodes = filter \n          ? data.nodes.filter(node => `${node.id} ${node.name} ${node.tags}`.toLowerCase().includes(filter))\n          : data.nodes;\n        // const sameRootNodes = data.nodes.filter(node => matchingNodes.some(n => n.id !== node.id && n.rootId === node.rootId));\n        // const relevantNodes = [...matchingNodes, ...sameRootNodes];\n        const existing = graph.graphData();\n        const nodes = [\n          ...matchingNodes.map(node => existing.nodes.find(n => n.id === node.id) ?? node),\n          ...filter \n            ? data.nodes.filter(node => matchingNodes.some(n => n.rootId === node.rootId)) \n            : []\n        ].map(node => existing.nodes.find(n => n.id === node.id) ?? node);\n        const links = data.links\n          .filter(link => nodes.some(n => n.id === link.source.id) && nodes.some(n => n.id === link.target.id))\n          .map(({ source: { id: source }, target: { id: target }, ...rest }) => ({ source, target, ...rest }))\n          .map(link => existing.links.find(l => l.source.id === link.source.id && l.target.id === link.target.id) ?? link);\n        graph.graphData({ nodes, links });\n        if ( filter )\n          graph.nodeVal(node => matchingNodes.some(n => n.id === node.id) ? 3 : node.val);\n        else\n          graph.nodeVal('val');\n        document.querySelectorAll('[data-type=\"linkToggle\"]').forEach(applyLinkFilter);\n      };\n    });\n\n  </script>\n</body>"};
(()=>{function T(){return[]}function B(i,t){return t(i)}function R(i){return JSON.parse(JSON.stringify(i))}function S(i,t){Object.assign(i,t)}var P=0;function k(i){let t=Math.max(0,i-(Date.now()-P));return new Promise(e=>{setTimeout(()=>{P=Date.now(),e()},t)})}function l(i){throw new Error(i)}async function $(){let i=document.createElement("input");return i.type="file",i.click(),new Promise(t=>{i.onchange=()=>{let e=i.files?.[0];if(!e)return t(void 0);let n=new FileReader;n.onload=()=>{t(n.result),i.remove()},n.readAsText(e)}})}function D(i){return i?new Date(i).getTime():0}function x(i,t=e=>e.created_at){return i.sort((e,n)=>D(t(e))-D(t(n)))}async function j(i,t){for(let e of t.slice(t.findIndex(n=>n.id===i.id)+1))if(e!==i&&e.metadata.tags===i.metadata.tags&&await M(e.image_url,i.image_url))return console.warn(`Found potential base clip for cropped clip ${i.id}: ${e.id} (this is not guaranteed to be correct)`),e.id;console.warn(`Could not find a base clip for cropped clip ${i.id}, the clip will be mistakenly marked as a root clip.`)}async function U(i){let e=await(await fetch(i)).blob();return new Promise((n,o)=>{let s=new Image;s.onload=()=>{URL.revokeObjectURL(s.src),n(s)},s.onerror=o,s.src=URL.createObjectURL(e)})}async function M(i,t){let e=await U(i),n=await U(t),o=document.createElement("canvas");o.width=e.width,o.height=e.height;let s=o.getContext("2d")??l("Canvas 2D context not supported");s.drawImage(e,0,0);let r=s.getImageData(0,0,e.width,e.height);s.drawImage(n,0,0);let c=s.getImageData(0,0,n.width,n.height),a=r.data,C=c.data,u=a.length,d=0;for(let g=0;g<u;g+=4)for(let h=0;h<3;h++)d+=Math.abs(a[g+h]-C[g+h]);let O=d/(u/4);return o.remove(),O<32;}function f(i,t){return i.find(F(t))}function F(i){return function(t){return Object.entries(i).every(([e,n])=>t[e]===n)}}function L(){return window.suno??l("`suno` object not found in `window`. Have you followed the setup instructions?")}var m=class{resolve;reject;promise;constructor(){this.promise=new Promise((t,e)=>Object.assign(this,{resolve:t,reject:e}))}};var A="vovas",p="sunoTools",G=new Promise((i,t)=>{let e=indexedDB.open(A,1);e.onupgradeneeded=()=>e.result.createObjectStore(p),e.onsuccess=()=>i(e.result),e.onerror=()=>t(e.error)});async function b(i){return(await G).transaction(p,i)}function I(i){return new Promise((t,e)=>{i.oncomplete=()=>t(),i.onerror=()=>e(i.error)})}async function K(i){return(await b(i)).objectStore(p)}var w=class{constructor(t,e){this.key=t;this.init=e}async load(){let t=(await K("readonly")).get(this.key);return new Promise((e,n)=>{t.onsuccess=()=>e(t.result??this.init),t.onerror=()=>n(t.error)})}async save(t){let e=await b("readwrite");return e.objectStore(p).put(t,this.key),I(e)}async clear(){let t=await b("readwrite");return t.objectStore(p).delete(this.key),I(t)}};function E(i,t){return Object.keys(t).reduce((e,n)=>e.replace(`___${n}___`,t[n]),i)}var _={rawClips:T(),lastProcessedPage:-1,allPagesProcessed:!1,links:T(),allLinksBuilt:!1},y=class{constructor(t=_){this.state=t;this.loadState()}reset(){this.state=_,console.log("Colony reset. Run build() to start building it again.")}storage=new w("colony",_);stateLoaded=new m;async loadState(t=!1){if(t){let e=await $();if(!e){console.log("No file selected, aborting.");return}this.state=JSON.parse(e)}else this.state=await this.storage.load();this.stateLoaded.resolve()}async saveState(t=!1){if(t){let e=JSON.stringify(this.state),n=new Blob([e],{type:"application/json"}),o=URL.createObjectURL(n),s=document.createElement("a");s.href=o,s.download="suno_colony.json",s.click(),URL.revokeObjectURL(o)}else await this.storage.save(this.state)}async build(){this.state.allPagesProcessed||await this.fetchClips(),this.state.allLinksBuilt||await this.buildLinks()}async fetchClips(){for(console.log("Fetching liked clips...");;){await k(1e3);let{data:{clips:t}}=await L().root.apiClient.GET("/api/feed/v2",{params:{query:{is_liked:!0,page:this.state.lastProcessedPage+1}}});if(!t.length){this.state.allPagesProcessed=!0;break}this.state.rawClips.push(...t),this.state.lastProcessedPage++,console.log(`Processed page ${this.state.lastProcessedPage}; total clips: ${this.state.rawClips.length}`)}}rawClipsById={};async loadClip(t){await k(1e3);console.log(`Clip ${t} not found in cache, loading...`);let e=await L().root.clips.loadClipById(t)??q(t);return this.state.rawClips.push(e),e}getClipByIdSync(t){t.startsWith("m_")&&(t=t.slice(2));return this.rawClipsById[t]??=this.state.rawClips.find(e=>N(t)?e.audio_url.includes(t):e.id===t)}async getClipById(t){return this.getClipByIdSync(t)??await this.loadClip(t)}async buildLinks(){console.log("Building links...");for(let t=0;t<this.state.rawClips.length;t++){let e=this.state.rawClips[t];t%100===0&&console.log(`Processed ${t} clips out of ${this.state.rawClips.length}`);let{metadata:n}=e,[o,s]="history"in n?B(n.history[0],r=>typeof r=="string"?[r,"extend"]:r.infill?[r.id,"inpaint"]:[r.id,"extend"]):"concat_history"in n?[n.concat_history[1].id,"apply"]:"cover_clip_id"in n?[n.cover_clip_id,"cover"]:"upsample_clip_id"in n?[n.upsample_clip_id,"remaster"]:"type"in n&&n.type==="edit_crop"?await j(e,this.state.rawClips).then(r=>r?[r,"crop"]:[void 0,void 0]):[void 0,void 0];o&&this.state.links.push([(await this.getClipById(o)).id,e.id,s])}this.state.allLinksBuilt=!0,console.log(`Built ${this.state.links.length} links.`)}_linkedClips;get linkedClips(){return this._linkedClips??=this.getLinkedClips()}getLinkedClips(){let t=this.state.links.reduce((n,[o,s,r])=>{let c=f(n,{id:o})??l(`Could not find parent for link ${o} -> ${s}.`),a=f(n,{id:s})??l(`Could not find child for link ${o} -> ${s}.`);if(a.parent)throw new Error(`Child ${s} already has a parent: ${a.parent.clip.id}`);return a.parent={kind:r,clip:c},(c.children??=[]).push({kind:r,clip:a}),n},R(this.state.rawClips));for(let n of t.filter(({parent:o})=>!o))e(n,n);return t;function e(n,o){Object.assign(n,{root:o});for(let{clip:s}of n.children??[])e(s,o)}}_rootClips;get rootClips(){return this._rootClips??=this.getRootClips()}getRootClips(){let t=this.linkedClips.filter(({parent:e})=>!e);return x(t)}get sortedClips(){let t=[],{rootClips:e}=this;for(let o of e)n(o);return t.reverse();function n(o){t.push(o);let{children:s}=o;if(s)for(let{clip:r}of x(s,({clip:c})=>c.created_at))n(r)}}get syntheticLinks(){let t=[],{rootClips:e}=this,n=e[0];for(let o of e.slice(1))t.push([n.id,o.id,"next"]),o?.children?.length&&(n=o);for(let o of this.linkedClips.filter(({children:s})=>s?.length))t.push([(o.root??l(`Clip ${o.id} has no root.`)).id,o.id,"descendant"]);return t}getTotalDescendants(t){let e=f(this.linkedClips,{id:t})??l(`Clip ${t} not found.`);return e.totalDescendants??=1+(e.children?.reduce((n,{clip:{id:o}})=>n+this.getTotalDescendants(o),0)??0)}get graphData(){let t=([o,s,r])=>({source:o,target:s,kind:r,color:r==="next"?"#006":void 0}),e=this.state.links.map(t).map(o=>({...o,isMain:this.getTotalDescendants(o.target)>1}));return{nodes:this.sortedClips.map(({id:o,title:s,metadata:{tags:r},created_at:c,children:a,audio_url:C,image_url:u,root:d})=>({id:o,name:s||r||c||o,audio_url:C,image_url:u,tags:r,rootId:d?.id,val:o===d?.id&&a?.length?2:a?.length?1:.5})),links:[...this.syntheticLinks.map(t),...e]}}render(t){let e=window.open();if(!e){console.error("Failed to open new window.");return}let n=t?.toLowerCase()==="3d";e.document.write(E(window.templates.colony,{data:JSON.stringify(this.graphData),use3DGraph:String(n),GraphRenderer:n?"ForceGraph3D":"ForceGraph",graph_url_slug:n?"3d-force-graph":"force-graph"}))}},v=new y;v.stateLoaded.promise.then(()=>{console.log("Colony state loaded");let{state:{allPagesProcessed:i,allLinksBuilt:t}}=v;console.log(!i||!t?"Colony state is incomplete. Run `await vovas.colony.build()` to complete it.":"Colony state is complete, you can now run `await vovas.colony.render()` to view the colony.")});function N(i){return i.match(/_\d+$/)}function q(i){return console.warn(`Clip ${i} not found, creating a missing clip.`),{isMissing:!0,id:i,title:"*Clip not found*",created_at:null,audio_url:`https://cdn1.suno.ai/${i}.mp3`,image_url:"",metadata:{duration:0,tags:""}}}S(window,{vovas:{Colony:y,colony:v}});})();
