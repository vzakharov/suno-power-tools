import { tag as t } from './dom.ts';
import { TAGS } from './types.ts';

// Note: the below doesn't allow tree-shaking, but it's better than spelling out each tag factory export manually (especially because TypeScript doesn't allow inferring all overloads of a function, which we would need for e.g. `a` to be inferred the same as `tag('a')`)
export const {
  a, abbr, address, area, article, aside, audio, b, base, bdi, bdo, blockquote, body, br, button, canvas, caption, cite, code, col, colgroup, data, datalist, dd, del, details, dfn, dialog, div, dl, dt, em, embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html, i, iframe, img, input, ins, kbd, label, legend, li, link, main, map, mark, menu, meta, meter, nav, noscript, object: $object, ol, optgroup, option, output, p, picture, pre, progress, q, rp, rt, ruby, s, samp, script, search, section, select, slot, small, source, span, strong, style, sub, summary, sup, table, tbody, td, template, textarea, tfoot, th, thead, time, title, tr, track, u, ul, var: $var, video, wbr
} = TAGS.reduce((tags, tagName) => {
  tags[tagName as any] = t(tagName);
  return tags;
}, {} as {
  [T in typeof TAGS[number]]: R<typeof t<T>>
});

type R<TF> = TF extends (...args: any) => infer R ? R : any;
export type a=R<typeof t<'a'>>;export type abbr=R<typeof t<'abbr'>>;export type address=R<typeof t<'address'>>;export type area=R<typeof t<'area'>>;export type article=R<typeof t<'article'>>;export type aside=R<typeof t<'aside'>>;export type audio=R<typeof t<'audio'>>;export type b=R<typeof t<'b'>>;export type base=R<typeof t<'base'>>;export type bdi=R<typeof t<'bdi'>>;export type bdo=R<typeof t<'bdo'>>;export type blockquote=R<typeof t<'blockquote'>>;export type body=R<typeof t<'body'>>;export type br=R<typeof t<'br'>>;export type button=R<typeof t<'button'>>;export type canvas=R<typeof t<'canvas'>>;export type caption=R<typeof t<'caption'>>;export type cite=R<typeof t<'cite'>>;export type code=R<typeof t<'code'>>;export type col=R<typeof t<'col'>>;export type colgroup=R<typeof t<'colgroup'>>;export type data=R<typeof t<'data'>>;export type datalist=R<typeof t<'datalist'>>;export type dd=R<typeof t<'dd'>>;export type del=R<typeof t<'del'>>;export type details=R<typeof t<'details'>>;export type dfn=R<typeof t<'dfn'>>;export type dialog=R<typeof t<'dialog'>>;export type div=R<typeof t<'div'>>;export type dl=R<typeof t<'dl'>>;export type dt=R<typeof t<'dt'>>;export type em=R<typeof t<'em'>>;export type embed=R<typeof t<'embed'>>;export type fieldset=R<typeof t<'fieldset'>>;export type figcaption=R<typeof t<'figcaption'>>;export type figure=R<typeof t<'figure'>>;export type footer=R<typeof t<'footer'>>;export type form=R<typeof t<'form'>>;export type h1=R<typeof t<'h1'>>;export type h2=R<typeof t<'h2'>>;export type h3=R<typeof t<'h3'>>;export type h4=R<typeof t<'h4'>>;export type h5=R<typeof t<'h5'>>;export type h6=R<typeof t<'h6'>>;export type head=R<typeof t<'head'>>;export type header=R<typeof t<'header'>>;export type hgroup=R<typeof t<'hgroup'>>;export type hr=R<typeof t<'hr'>>;export type html=R<typeof t<'html'>>;export type i=R<typeof t<'i'>>;export type iframe=R<typeof t<'iframe'>>;export type img=R<typeof t<'img'>>;export type input=R<typeof t<'input'>>;export type ins=R<typeof t<'ins'>>;export type kbd=R<typeof t<'kbd'>>;export type label=R<typeof t<'label'>>;export type legend=R<typeof t<'legend'>>;export type li=R<typeof t<'li'>>;export type link=R<typeof t<'link'>>;export type main=R<typeof t<'main'>>;export type map=R<typeof t<'map'>>;export type mark=R<typeof t<'mark'>>;export type menu=R<typeof t<'menu'>>;export type meta=R<typeof t<'meta'>>;export type meter=R<typeof t<'meter'>>;export type nav=R<typeof t<'nav'>>;export type noscript=R<typeof t<'noscript'>>;export type $object=R<typeof t<'object'>>;export type ol=R<typeof t<'ol'>>;export type optgroup=R<typeof t<'optgroup'>>;export type option=R<typeof t<'option'>>;export type output=R<typeof t<'output'>>;export type p=R<typeof t<'p'>>;export type picture=R<typeof t<'picture'>>;export type pre=R<typeof t<'pre'>>;export type progress=R<typeof t<'progress'>>;export type q=R<typeof t<'q'>>;export type rp=R<typeof t<'rp'>>;export type rt=R<typeof t<'rt'>>;export type ruby=R<typeof t<'ruby'>>;export type s=R<typeof t<'s'>>;export type samp=R<typeof t<'samp'>>;export type script=R<typeof t<'script'>>;export type search=R<typeof t<'search'>>;export type section=R<typeof t<'section'>>;export type select=R<typeof t<'select'>>;export type slot=R<typeof t<'slot'>>;export type small=R<typeof t<'small'>>;export type source=R<typeof t<'source'>>;export type span=R<typeof t<'span'>>;export type strong=R<typeof t<'strong'>>;export type style=R<typeof t<'style'>>;export type sub=R<typeof t<'sub'>>;export type summary=R<typeof t<'summary'>>;export type sup=R<typeof t<'sup'>>;export type table=R<typeof t<'table'>>;export type tbody=R<typeof t<'tbody'>>;export type td=R<typeof t<'td'>>;export type template=R<typeof t<'template'>>;export type textarea=R<typeof t<'textarea'>>;export type tfoot=R<typeof t<'tfoot'>>;export type th=R<typeof t<'th'>>;export type thead=R<typeof t<'thead'>>;export type time=R<typeof t<'time'>>;export type title=R<typeof t<'title'>>;export type tr=R<typeof t<'tr'>>;export type track=R<typeof t<'track'>>;export type u=R<typeof t<'u'>>;export type ul=R<typeof t<'ul'>>;export type $var=R<typeof t<'var'>>;export type video=R<typeof t<'video'>>;export type wbr=R<typeof t<'wbr'>>;